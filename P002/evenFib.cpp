/*Each new term in the Fibonacci sequence is generated by adding the previous 
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#include<iostream>

#define MAX 4000000

using namespace std;

void evenFibSum(int n){
	long long int first = 1, 
                  second = 2,
                  next = 0,
                  sumOfEven = 2;

	int count = 2;
    
	cout<<first<<" "<<second<<" ";

    while((count<n) && (next < MAX)){
        next = first + second;
        cout<<next<<" ";
        if((next%2 == 0)){
            sumOfEven = sumOfEven + next;
        }
        first = second;
        second = next;
        count++;
    }
    cout<<"sum of even fib numbers are: "<< sumOfEven<<endl;
}


int main(){
    int num;
    cout<<"enter any number"<<"\n";
    cin>>num;
    evenFibSum(num);

return 0;
}
